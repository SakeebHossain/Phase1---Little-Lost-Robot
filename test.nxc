sub moveForward(int seconds) {
   OnFwd(OUT_BC, 20);
   Wait(100 * seconds);
   Off(OUT_BC);
}

sub moveBackward(int seconds) {
   OnRev(OUT_BC, 20);
   Wait(100 * seconds);
   Off(OUT_BC);
}

sub turnRight(int degree) {
 OnRev(OUT_C, 20);
 OnFwd(OUT_B, 20);
 Wait(degree * 30);
 Off(OUT_BC);
}

sub turnLeft(int degree) {
 OnRev(OUT_B, 20);
 OnFwd(OUT_C, 20);
 Wait(degree * 30);
 Off(OUT_BC);
}

int sense(int iter) {
    // Turn on the sensor.
    SetSensorColorFull(S1);
    string sColor;
    int nColor, bestColor = 7, possible[] = {0,0,0,0,0,0,0}, high = 0;
    
    // Determine what color is being seen. Scan iter amount of times
    for(int i = 0; i < iter; i += 1) {
        nColor = Sensor(S1);
        if(nColor > 0 || nColor < 7) {
            possible[nColor - 1] += 1;
        }
        else {
            possible[6] += 1;
        }
    }
    //Find the color that was scanned the most
    for(int index = 0; index < 7; index += 1) {
        if(possible[index] > high) {
            bestColor = index + 1;
            high = possible[index];
        }
    }
    if(bestColor == 1) {

            sColor = "Black";
        }

        else if(bestColor == 2) {

            sColor = "Blue";
        }

        else if(bestColor == 3) {

            sColor = "Green";
        }

        else if(bestColor == 4) {

            sColor = "Yellow";
        }
        else if(bestColor == 6) {
            sColor = "white";
        }
        else {
            sColor = "Unknown";
        }
        
    // Write the currently sensed color to screen.
    ClearScreen();
    TextOut(0, 56, NumToStr(bestColor) + ". " + sColor);
    
    // Play a tone based on the color seen.
    PlayToneEx(684 + (bestColor * 400), 30, 3, FALSE);
    return bestColor;

}

sub scan() {
    int NE;
    int SE;
    int SW;
    int NW;

    moveBackward(5);
    
    turnLeft(25);
    Wait(500);
    SW = sense(200);
    Wait(1000);

    turnRight(50);
    Wait(500);
    SE = sense(200);
    Wait(1000);
    
    turnLeft(25);
    moveForward(16);
    
    turnLeft(25);
    Wait(500);
    NW = sense(200);
    Wait(1000);

    turnRight(50);
    Wait(500);
    NE = sense(200);
    Wait(1000);
    
    turnLeft(25);

}

sub move(int color) {
    int dir;
    // If we see red, turn 180.
    if (color == 5) {
    
        turnRight(175);
        
    // If we see black or yellow...
    } else if ( color == 1 || color == 4 ) {
    
        // If you hit yellow (i.e. an intersection,
        // scan it
        if ( color == 4 ) {
        
            scan();
            Wait(500);
            moveForward(8);
            Wait(500);
            dir = Random(2);
            if(dir == 0) {
                turnRight(90);
            }
            else if(dir == 1) {
                turnLeft(90);
            }

        // Move forward if you see black.
        } else {
        
            moveForward(1);
            
        }
        
    // If we see blue, green, or white then adjust back to black.
    } else if ( color == 2 || color == 3 || color == 6 ) {
    
        int miss = 10, angle, c;
    
        while (true) {
            angle = 1;
            while(angle < miss) {
            // Check the right side for black.
                turnRight(3);
                c = sense(200);
                if(c == 1 || c == 4) {
                    break;
                }
                angle += 1;
            }
            if(c == 1 || c == 4) {
                break;
            }
            Wait(500);
            // If, after checking right side, black or yellow are
            // not found, check left.      
            // Check the left side.
            angle = 1;
            while(angle < 2 * miss) {
            // Check the right side for black.
                turnLeft(3);
                c = sense(200);
                if(c == 1 || c == 4) {
                    break;
                }
                angle += 1;
            }
            if(c == 1 || c == 4) {
                break;
            }
            
            Wait(500);
            
            // If after checking left side, black or yellow are
            // not found, re-center the robot and try again with wider scan.
            angle = 1;
            while(angle < miss) {
                turnRight(3);
                c = sense(200);
                if(c == 1 || c == 4) {
                    break;
                }
                angle += 1;
            }
            if(c == 1 || c == 4) {
                break;
            }
            Wait(500);
            // Increment counter to increase scan zone.
            miss = miss + 10;
        }
        
    }
                
}


task main() {

    int color;
    
    while (true) {
    
        color = sense(200);
        move(color);
        
    }
}
