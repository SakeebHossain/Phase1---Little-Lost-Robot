#define TIME 1000
#define MAXVOL 7
#define pause_blue Wait(TIME)
#define blue_sound \
    PlayFileEx("! blue.rso", MAXVOL, FALSE); pause_blue


sub moveForward(int seconds) {
   OnFwd(OUT_BC, 20);
   Wait(100 * seconds);
   Off(OUT_BC);
}

sub turnRight(int degree) {
 OnRev(OUT_B, 20);
 OnFwd(OUT_C, 20);
 Wait(degree * 30);
 Off(OUT_BC);
}

sub turnLeft(int degree) {
 OnRev(OUT_C, 20);
 OnFwd(OUT_B, 20);
 Wait(degree * 30);
 Off(OUT_BC);
}

int sense() {
    // Turn on the sensor.
    SetSensorColorFull(S1);
    string sColor;
    int nColor;
    
    // Determine what color is being seen.
    nColor = Sensor(S1);
    if(nColor == 1) {

            sColor = "Black";
        }

        else if(nColor == 2) {

            sColor = "Blue";
        }

        else if(nColor == 3) {

            sColor = "Green";
        }

        else if(nColor == 4) {

            sColor = "Yellow";
        }
        else if(nColor == 6) {
            sColor = "white";
        }
        else {
            sColor = "Unknown";
        }
        
    // Write the currently sensed color to screen.
    ClearScreen();
    TextOut(0, 56, NumToStr(nColor) + ". " + sColor);
    
    // Play a tone based on the color seen.
    PlayTone(684 + (nColor * 400), 30);
    return nColor;

}

int move(int color) {

    // If we see red, turn 180.
    if (color == 5) {
    
        turnRight(180);
        
    // If we see black or yellow...
    } else if ( color == 1 || color == 4 ) {
    
        // If you hit yellow (i.e. an intersection,
        // move forward a bit and turn right.
        if ( color == 4 ) {
        
            moveForward(1);
            //Wait(500);
            //turnRight(90);

        // Move forward if you see black.
        } else {
        
            moveForward(1);
            
        }
        
    // If we see blue, green, or white then adjust back to black.
    } else if ( color == 2 || color == 3 || color == 6 ) {
    
        int miss = 1;
    
        while (miss) {

            // Check the right side for black.
            turnRight(10 * miss);
        
            // If, after checking right side, black or yellow are
            // not found, check left.
            if(!(Sensor(S1) == 1 || Sensor(S1) == 4)) {
        
                // Check the left side.
                turnLeft(20 * miss);

            } else {

                break;
                
            }
            
            Wait(500);
            
            // If after checking left side, black or yellow are
            // not found, re-center the robot and try again with wider scan.
            if(!(Sensor(S1) == 1 || Sensor(S1) == 4)) {

                turnRight(10 * miss);
                
            } else {

                break;

            }
            
            // Increment counter to increase scan zone.
            miss = miss + 1;
            
        }
        
    }
                
}


task main() {

    int color;
    
    while (true) {
    
        color = sense();
        move(color);
        
    }
}
