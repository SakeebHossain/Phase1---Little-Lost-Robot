#define TIME 1000
#define MAXVOL 7
#define pause_blue Wait(TIME)
#define blue_sound \
    PlayFileEx("! blue.rso", MAXVOL, FALSE); pause_blue


sub moveForward(int seconds) {
   OnRev(OUT_BC, 20);
   Wait(100);
   Off(OUT_BC);
}

sub turnRight(int degree) {
 OnRev(OUT_B, 70);
 OnFwd(OUT_C, 70);
 Wait(degree * 7);
 Off(OUT_BC);
}

sub turnLeft(int degree) {
 OnRev(OUT_C, 70);
 OnFwd(OUT_B, 70);
 Wait(degree * 7);
 Off(OUT_BC);
}

int adjustment(int miss) {
    turnRight(5*miss);

    if(!(Sensor(S1) == 1 || Sensor(S1) == 4)) {
        turnLeft(5*miss);
    } else {
        return 0;
    }

    turnLeft(5*miss);
    return 1;
}

task main() {
    string sColor;
    int nColor = Sensor(S1);
    int prevColor;
    int turn = 0;
    int adjust = 0;
    int miss = 0;

    // Turn on the sensor
    SetSensorColorFull(S1);

    while (true) {

        prevColor = nColor;

        nColor = Sensor(S1);

        if(nColor == 1) {

            sColor = "Black";
            moveForward(1);
        }
        
        else if(nColor == 5) {

            sColor = "Red";
            ClearScreen();
            TextOut(0, 56, NumToStr(nColor) + ". " + sColor);
            turn = 1;
            //turnRight(180);
        }
        
        else {
            adjust = 1;
        }


        if(nColor != prevColor) {
            PlayTone(684 + (nColor * 100), 30);

        }

        if(turn) {
            turnRight(180);
            turn = 0;
        }
        
        while (adjust) {
                adjust = adjustment(miss);
                miss = miss + 1;
        }
            
        miss = 0;

        ClearScreen();
        TextOut(0, 56, NumToStr(nColor) + ". " + sColor);


    }

}
